{
  "_args": [
    [
      {
        "raw": "graphql-postgres-subscriptions",
        "scope": null,
        "escapedName": "graphql-postgres-subscriptions",
        "name": "graphql-postgres-subscriptions",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/hugopapier/Documents/subscription-test/server"
    ]
  ],
  "_from": "graphql-postgres-subscriptions@latest",
  "_id": "graphql-postgres-subscriptions@1.0.2",
  "_inCache": true,
  "_location": "/graphql-postgres-subscriptions",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/graphql-postgres-subscriptions_1.0.2_1527252405126_0.22137550715622"
  },
  "_npmUser": {
    "name": "eljuli",
    "email": "mayorga.julian@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "graphql-postgres-subscriptions",
    "scope": null,
    "escapedName": "graphql-postgres-subscriptions",
    "name": "graphql-postgres-subscriptions",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/graphql-postgres-subscriptions/-/graphql-postgres-subscriptions-1.0.2.tgz",
  "_shasum": "d9c2e88653b249ffee75dc20689149d07e24e579",
  "_shrinkwrap": null,
  "_spec": "graphql-postgres-subscriptions",
  "_where": "/Users/hugopapier/Documents/subscription-test/server",
  "bugs": {
    "url": "https://github.com/GraphQLCollege/graphql-postgres-subscriptions/issues"
  },
  "dependencies": {
    "graphql": "^0.13.2",
    "graphql-subscriptions": "^0.5.8",
    "iterall": "^1.2.2",
    "pg": "^7.4.1",
    "pg-ipc": "^1.0.4"
  },
  "description": "[![Build Status](https://travis-ci.org/GraphQLCollege/graphql-postgres-subscriptions.svg?branch=master)](https://travis-ci.org/GraphQLCollege/graphql-postgres-subscriptions)",
  "devDependencies": {
    "jest": "^22.4.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-cZzs2UUF6Nd7ZQTi5vulk1tjjarNMcUVQ75/VhA4nhQnQLjtCfDDSXsqe0ktHDq/K5uATT9jiOWbbhg+xuacFw==",
    "shasum": "d9c2e88653b249ffee75dc20689149d07e24e579",
    "tarball": "https://registry.npmjs.org/graphql-postgres-subscriptions/-/graphql-postgres-subscriptions-1.0.2.tgz",
    "fileCount": 11,
    "unpackedSize": 126740,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbCAW1CRA9TVsSAnZWagAA30AQAIbyeU/o50z1gbpR405n\n3T0G4KRjB2Vdxc/7BLt13gUMmk+hcagfgKFj2sAGQzmY+st2pEZH9L5Fsgm7\n/tptNri8XhV1GA2a+q/2NlReANX7RAueKYtJ8T/t4AbKTuEg01AGGBD20k2c\nVextyoyMedkbPRBOmbp1iIXCxzpXfWONwPAUzXEOmBWglDuucUiRNn2kCjE0\n49KGdx6RIFZ1UtzDZxAJU7l5nuBz+Ip+glcLrh1m7B8gRFkqZZPy6W6Ijk6D\nOKXMRgcVDc6EX/37VGfbaz7zTid/h4vRgmHskA/D68WKCDtLLF96pq4tF2FJ\nCn4F602Fa0P6eiXfebHMAdwzZuxLy3xck7ssNRt7wS1GHB4HSUStDrOSLadp\nVC7MQa05ocj1K7oGeh1xfxQVEv4wK24ePzehcP6aNoVnpJoDiS8BWLOG/ReS\nmvAXGzt/SewLIfkMgx4svfad0Wd4F+dR0djrfGcqWZEtNd/s/ZCreyRUqeyv\nMOrhJrfCMpopPQRsVSkY9PzbwnQ1KIY1hTaP/oXgMm47PzwWfflrnI/nayQJ\n3abes/4nHrhhBO/QHhhfpkQ0Ks/VWqrKn7Mm6SHsSdvgQbgPyZ9jNN77KDQK\nyd8u343gQqL4RUPPzGNcjwIGlf1RRU45tTxYEZfpJ6+WAG4BOsypyekFbtJX\ncGAa\r\n=Iusy\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "gitHead": "bde03298534ec1e48b7fb72b6299eadd8c3f6a3a",
  "homepage": "https://github.com/GraphQLCollege/graphql-postgres-subscriptions#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "eljuli",
      "email": "mayorga.julian@gmail.com"
    }
  ],
  "name": "graphql-postgres-subscriptions",
  "optionalDependencies": {},
  "readme": "# graphql-postgres-subscriptions\n\n[![Build Status](https://travis-ci.org/GraphQLCollege/graphql-postgres-subscriptions.svg?branch=master)](https://travis-ci.org/GraphQLCollege/graphql-postgres-subscriptions)\n\nA graphql subscriptions implementation using postgres and apollo's graphql-subscriptions.\n\nThis package implements the PubSubEngine Interface from the graphql-subscriptions package and also the new AsyncIterator interface. It allows you to connect your subscriptions manger to a postgres based Pub Sub mechanism to support multiple subscription manager instances.\n\n## Installation\n\n`yarn add graphql-postgres-subscriptions` or `npm install graphql-postgres-subscriptions --save`\n\n## Usage\n\nExample app: https://github.com/GraphQLCollege/apollo-subscriptions-example\n\nFirst of all, follow the instructions in [graphql-subscriptions](https://github.com/apollographql/graphql-subscriptions) to add subscriptions to your app.\n\nAfterwards replace `PubSub` with `PostgresPubSub`:\n\n```js\n// Before\nimport { PubSub } from 'graphql-subscriptions';\n\nexport const pubsub = new PubSub();\n```\n\n```js\n// After\nimport { PostgresPubSub } from 'graphql-postgres-subscriptions';\n\nexport const pubsub = new PostgresPubSub();\n```\n\nThis library uses [`node-postgres`](https://github.com/brianc/node-postgres) to connect to PostgreSQL. If you want to customize connection options, please refer to their [connection docs](https://node-postgres.com/features/connecting).\n\nYou have three options:\n\nIf you don's send any argument to `new PostgresPubSub()`, we'll create a `postgres` client with no arguments.\n\nYou can also pass [node-postgres connection options](https://node-postgres.com/features/connecting#programmatic) to `PostgresPubSub`.\n\nYou can instantiate your own `client` and pass it to `PostgresPubSub`. Like this:\n\n```js\nimport { PostgresPubSub } from 'graphql-postgres-subscriptions';\nimport { Client } from \"pg\";\n\nconst client = new Client();\nawait client.connect();\nconst pubsub = new PostgresPubSub({ client });\n```\n\n**Important**: Don't pass clients from `pg`'s `Pool` to `PostgresPubSub`. As [node-postgres creator states in this StackOverflow answer]((https://stackoverflow.com/questions/8484404/what-is-the-proper-way-to-use-the-node-js-postgresql-module)), the client needs to be around and not shared so pg can properly handle `NOTIFY` messages (which this library uses under the hood)\n\n## Development\n\nThis project has an integration test suite that uses [`jest`](https://facebook.github.io/jest/) to make sure everything works correctly.\n\nWe use Docker to spin up a PostgreSQL instance before running the tests. To run them, type the following commands:\n\n* `docker-compose build`\n* `docker-compose run test`",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/GraphQLCollege/graphql-postgres-subscriptions.git"
  },
  "scripts": {
    "test": "jest --forceExit"
  },
  "version": "1.0.2"
}
